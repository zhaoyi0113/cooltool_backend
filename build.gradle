buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.2.RELEASE")
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'org.flywaydb.flyway'
apply plugin: 'groovy'

jar {
    baseName = 'cooltoo'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-jersey")

    compile("org.springframework.boot:spring-boot-starter-data-jpa")

    compile("com.h2database:h2")
    compile("org.hibernate:hibernate-entitymanager")
    //compile("org.springframework:spring-orm")

    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile 'mysql:mysql-connector-java:5.1.25'

    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    testCompile("junit:junit")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

ext {

    environment = project.hasProperty("env") ? env : 'dev'
    environmentPah = "envs/"+environment
    // read database envs
    Properties props = new Properties()
    props.load(new FileInputStream(file(environmentPah + "/database.properties")))
    db_host = props.getProperty("db_host")
    db_port = props.getProperty("db_port")
    db_user = props.getProperty("db_user")
    db_password = props.getProperty("db_password")
    db_schema = props.getProperty("db_schema")
    flyway.url = "jdbc:mysql://" + db_host + ":" + db_port + "/" + db_schema + "?characterEncoding=utf8"
    flyway.user = db_user
    flyway.password = db_password
    flyway.encoding = 'UTF-8'
    flyway.setBaselineOnMigrate(true);
    flyway.setValidateOnMigrate(true);
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources", environmentPah]
        }
    }
}