buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.flywaydb.flyway'
apply plugin: 'groovy'

group = 'com.cooltoo.dbschema'
version = '1.0.0-SNAPSHOT'


dependencies {
    compile("com.h2database:h2:1.4.190")
    compile("org.hibernate:hibernate-entitymanager:4.3.11.Final")
    compile("org.springframework.boot:spring-boot-starter-jdbc:1.3.2.RELEASE")
    compile 'mysql:mysql-connector-java:5.1.25'
    compile ('commons-codec:commons-codec:1.9')

    compile("org.flywaydb:flyway-core:3.2.1")


    compile project(':common')
}

ext {

    environment = project.hasProperty("env") ? env : 'dev'
    environmentPah = "envs/"+environment
    // read database envs
    Properties props = new Properties()
    props.load(new FileInputStream(file(environmentPah + "/application.properties")))
    db_user = props.getProperty("spring.datasource.username")
    db_password = props.getProperty("spring.datasource.password")
    flyway.url = props.getProperty("spring.datasource.url")
    flyway.user = db_user
    flyway.password = db_password
    flyway.encoding = 'UTF-8'
    flyway.setBaselineOnMigrate(true);
    flyway.setValidateOnMigrate(false);
    flyway.outOfOrder=true

}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources", environmentPah]
        }
    }
}